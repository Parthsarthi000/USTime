import 'package:flutter/material.dart';

import 'DataBaseStuff/taskschemata.dart';

List<Task> onPress1Tasks = [
  Task(
    eventName: "Lunch",
    dayNumber: 7,
    from: DateTime(2025, 5, 7, 12, 00),
    to: DateTime(2025, 5, 7, 13, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 7, 13, 00),
    repeatType: RepeatType.noRepeat,
  ),
  Task(
    eventName: "COMP PPT Meetup",
    dayNumber: 7,
    from: DateTime(2025, 5, 7, 13, 00),
    to: DateTime(2025, 5, 7, 16, 00),
    background: Colors.orange,
    isAllDay: false,
    taskDifficulty: Difficulty.medium,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 7, 16, 00),
    repeatType: RepeatType.noRepeat,
  ),
  Task(
    eventName: "COMP PPT Rehersal",
    dayNumber: 7,
    from: DateTime(2025, 5, 7, 19, 00),
    to: DateTime(2025, 5, 7, 20, 30),
    background: Colors.orange,
    isAllDay: false,
    taskDifficulty: Difficulty.medium,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 7, 20, 30),
    repeatType: RepeatType.noRepeat,
  ),
  // ðŸ”¹ Final Rehearsal Before COMP Presentation
  Task(
    eventName: "Final Rehearsal for COMP Presentation",
    dayNumber: 8,
    from: DateTime(2025, 5, 8, 11, 00),
    to: DateTime(2025, 5, 8, 11, 30),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 8, 11, 30),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Lunch After COMP Presentation
  Task(
    eventName: "Lunch Break",
    dayNumber: 8,
    from: DateTime(2025, 5, 8, 13, 30),
    to: DateTime(2025, 5, 8, 15, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.canShift,
    taskImportance: Importance.medium,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 8, 15, 00),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Study Session for HUMA Exam
  Task(
    eventName: "Study for HUMA Exam",
    dayNumber: 8,
    from: DateTime(2025, 5, 8, 15, 30),
    to: DateTime(2025, 5, 8, 17, 30),
    background: Colors.orange,
    isAllDay: false,
    taskDifficulty: Difficulty.medium,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 8, 17, 30),
    repeatType: RepeatType.noRepeat,
  ),
  // ðŸ”¹ Wind down for sleep
  Task(
    eventName: "Wind down for sleep",
    dayNumber: 8,
    from: DateTime(2025, 5, 8, 22, 00),
    to: DateTime(2025, 5, 8, 23, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 8, 23, 00),
    repeatType: RepeatType.noRepeat,
  ),

  //HUMA Exam Day
  // ðŸ”¹ Wake-Up Reminder
  Task(
    eventName: "Wake Up",
    dayNumber: 9,
    from: DateTime(2025, 5, 9, 7, 00),
    to: DateTime(2025, 5, 9, 7, 10),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 9, 7, 10),
    repeatType: RepeatType.daily,
  ),

// ðŸ”¹ Study Session (9 AM - 11:30 AM)
  Task(
    eventName: "Focused Study Session",
    dayNumber: 9,
    from: DateTime(2025, 5, 9, 9, 00),
    to: DateTime(2025, 5, 9, 11, 30),
    background: Colors.red,
    isAllDay: false,
    taskDifficulty: Difficulty.hard,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 9, 11, 30),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Lunch Break (1:30 PM - 2:30 PM)
  Task(
    eventName: "Lunch",
    dayNumber: 9,
    from: DateTime(2025, 5, 9, 13, 30),
    to: DateTime(2025, 5, 9, 14, 30),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.canShift,
    taskImportance: Importance.medium,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 9, 14, 30),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Fun & Social Time (6 PM - 8 PM)
  Task(
    eventName: "Hang Out with Friends",
    dayNumber: 9,
    from: DateTime(2025, 5, 9, 18, 00),
    to: DateTime(2025, 5, 9, 20, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.canShift,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 9, 20, 00),
    repeatType: RepeatType.noRepeat,
  ),
  // ðŸ”¹ Wake-Up Routine (9 AM)
  Task(
    eventName: "Wake Up & Morning Prep",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 9, 00),
    to: DateTime(2025, 5, 10, 9, 10),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.medium,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 9, 10),
    repeatType: RepeatType.daily,
  ),

// ðŸ”¹ Deep Work Session 1 (10 AM - 12 PM)
  Task(
    eventName: "COMP Project",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 10, 00),
    to: DateTime(2025, 5, 10, 12, 00),
    background: Colors.red,
    isAllDay: false,
    taskDifficulty: Difficulty.hard,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 12, 00),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Lunch & Meeting (12 PM - 2 PM)
  Task(
    eventName: "Lunch & Chill",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 12, 00),
    to: DateTime(2025, 5, 10, 14, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 14, 00),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Deep Work Session 2 (2:30 PM - 4:30 PM)
  Task(
    eventName: "COMP Porject Meeting",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 14, 30),
    to: DateTime(2025, 5, 10, 16, 30),
    background: Colors.red,
    isAllDay: false,
    taskDifficulty: Difficulty.hard,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 16, 30),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Running Session (5 PM - 6 PM)
  Task(
    eventName: "Run",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 17, 00),
    to: DateTime(2025, 5, 10, 18, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.medium,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 18, 00),
    repeatType: RepeatType.daily,
  ),

// ðŸ”¹ Deep Work Session 3 (8 PM - 10 PM)
  Task(
    eventName: "Family Time",
    dayNumber: 10,
    from: DateTime(2025, 5, 10, 20, 00),
    to: DateTime(2025, 5, 10, 22, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 10, 22, 00),
    repeatType: RepeatType.noRepeat,
  ),

  // ðŸ”¹ Wake-Up Routine (8 AM)
  Task(
    eventName: "Wake Up",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 8, 00),
    to: DateTime(2025, 5, 11, 8, 10),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.medium,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 8, 10),
    repeatType: RepeatType.daily,
  ),

// ðŸ”¹ Deep Work Session 1 (10 AM - 12 PM)
  Task(
    eventName: "COMP Project",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 10, 00),
    to: DateTime(2025, 5, 11, 12, 00),
    background: Colors.red,
    isAllDay: false,
    taskDifficulty: Difficulty.hard,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 12, 00),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Lunch & Meeting (12 PM - 2 PM)
  Task(
    eventName: "Lunch & Yap With Friends",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 12, 00),
    to: DateTime(2025, 5, 11, 14, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 14, 00),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Deep Work Session 2 (2:30 PM - 4:30 PM)
  Task(
    eventName: "COMP Project Report",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 14, 30),
    to: DateTime(2025, 5, 11, 16, 30),
    background: Colors.red,
    isAllDay: false,
    taskDifficulty: Difficulty.hard,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 16, 30),
    repeatType: RepeatType.noRepeat,
  ),

// ðŸ”¹ Running Session (5 PM - 6 PM)
  Task(
    eventName: "Run",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 17, 00),
    to: DateTime(2025, 5, 11, 18, 00),
    background: Colors.green,
    isAllDay: false,
    taskDifficulty: Difficulty.easy,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 18, 00),
    repeatType: RepeatType.daily,
  ),

// ðŸ”¹ Deep Work Session 3 (8 PM - 10 PM)
  Task(
    eventName: "COMP Project Meeting",
    dayNumber: 10,
    from: DateTime(2025, 5, 11, 20, 00),
    to: DateTime(2025, 5, 11, 22, 00),
    background: Colors.orange,
    isAllDay: false,
    taskDifficulty: Difficulty.medium,
    taskType: Type.fixed,
    taskImportance: Importance.high,
    taskStatus: Status.toDo,
    deadline: DateTime(2025, 5, 11, 22, 00),
    repeatType: RepeatType.noRepeat,
  )
];

List<Task> onPress2Tasks = [];
